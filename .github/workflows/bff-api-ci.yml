name: BFF API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs: 
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          aws-region: ap-southeast-2
          mask-aws-account-id: 'no'
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: service-bff-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f src/Bff.Api/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  
  DeployToDev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    needs: [Build]

    steps:         
      - name: Configure AWS credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_FOR_ECS }}
          role-duration-seconds: 900
          aws-region: ap-southeast-2
          
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition service --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: service-bff-api
          image: ${{ needs.Build.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bff-api
          cluster: alhardynet
          wait-for-service-stability: false
          
  DeployToStage:
    name: Deploy to Stage
    runs-on: ubuntu-latest
    environment: stage
    needs: [Build, DeployToDev]

    steps:
      - name: Configure AWS credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_FOR_ECS }}
          role-duration-seconds: 900
          aws-region: ap-southeast-2
          role-skip-session-tagging: true # TODO: Fix permission and set to false

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition service --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: service-bff-api
          image: ${{ needs.Build.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bff-api
          cluster: alhardynet
          wait-for-service-stability: false

  DeployToProd:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: prod
    needs: [Build, DeployToStage]

    steps:
      - name: Configure AWS credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_FOR_ECS }}
          role-duration-seconds: 900
          aws-region: ap-southeast-2

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition service --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: service-bff-api
          image: ${{ needs.Build.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bff-api
          cluster: alhardynet
          wait-for-service-stability: true